^^
deps.requestx = 1;
deps.base64Encode = 1;
deps.isArray = 1;
deps.strlen = 1;
deps.md5 = 1;
deps.extend1 = 1;
deps.formatDate = 1;
$$
function Yuntongxun(config){
	var self = this;
	var accountid = config.sid;
	var token = config.token;
	var appid = config.appid;
	var rooturl = "https://" + (config.dev?"sandbox":"") + "app.cloopen.com:8883/2013-12-26/Accounts/";
	self.timestamp = function(){
		return formatDate(new Date(), "yyyyMMddhhmmss");
	}
	self.auth = function(timestamp){
		return {
			"headers": {
				"Accept": "application/json",			
				"Authorization": base64Encode(
					accountid + ":" + timestamp
				)
			}
		}
	}
	self.sig = function(timestamp){
		return md5(
			accountid + token + timestamp
		).toUpperCase();
	}
	self.request = function(){
		var service = arguments[0];
		var params, fn;
		if(typeof arguments[2] == "function")
			params = arguments[1], fn = arguments[2];
		else if(typeof arguments[1] == "function")
			params = {}, fn = arguments[1];
		else
			params = {}, fn = function(){};
		var timestamp = self.timestamp();
		var url = rooturl + accountid + "/" + service + "?sig=" + self.sig(timestamp);
		var body = {
			'appId': appid
		}
		if(self[service])
			self[service](params, body);
		else
			extend1(body, params);
		requestx.postx(url, self.auth(timestamp), body, function(err, result){
			if(err) return fn(err);
			if(result.statusCode == "000000")
				fn(null, result);
			else
				fn(result);
		});
	}
	self.SubAccounts = function(params, body) {
		body['friendlyName'] = params.nickname;
	}
	self.GetSubAccounts = function(params, body){
		body.offset = 100;
	}	
	self["IM/PushMsg"] = function(params, body) {
		body.pushType = "1";
		body.msgType = "1";
		body.sender = params.sender;
		if(!isArray(params.receiver))
			 body.receiver = [params.receiver];
		else
			body.receiver = params.receiver;
		body.msgContent= params.content;
		body.msgDomain = params.note?JSON.stringify(params.note):"";
		body.msgFileName = "";
		body.msgFileUrl = "";
	}
	self["SMS/TemplateSMS"] = function(params, body){
		body.to = params.phone;
		body.templateId = params.templateId;
		if(params.code)
			body.datas = [params.code];
		else
			body.datas = [];
	}
	self["Calls/VoiceVerify"] = function(params, body){
	}
//phone voiceflag tpl(content, yuntongxunId) code
	self.send = function(params, fn) {
		var data;
		if(params.voiceflag) {
			data = {
				"appId": appid,
				"verifyCode": params.code,
				"to": params.phone,
				"playTimes": 2
			}
		}else{
			var datas = [];
			params.tpl.content.replace(/%(\S+)%/g, function(str, p1){
				datas.push(params[p1]);
			});
			data = {
				"to": params.phone,
				"appId": appid,
				"templateId": params.tpl.yuntongxunId,
				"datas": datas
			}
		}
		var headers = {
			"Accept": "application/json",
			"Content-Type": "application/json;charset=utf-8",
			"Content-Length": strlen(data),
			"Authorization": self.auth()
		};
		var service = params.voiceflag ? "/Calls/VoiceVerify" : "/SMS/TemplateSMS";

		var url = rooturl + accountid + service + "?sig=" + self.sig();
		requestx.postx(url, headers, data, function(err, result) {
			if (err) return fn(err);
			console.log(result);
			if (result.statusCode == "000000")
				return fn(null, result.smsMessageSid);
			return fn(result);
		});
	}
}
